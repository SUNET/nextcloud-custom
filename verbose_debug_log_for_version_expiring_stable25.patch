diff --git a/apps/files_versions/lib/Storage.php b/apps/files_versions/lib/Storage.php
index 024e1debc92..df02f9a9395 100644
--- a/apps/files_versions/lib/Storage.php
+++ b/apps/files_versions/lib/Storage.php
@@ -781,6 +781,8 @@ class Storage {
 		$logger = \OC::$server->get(LoggerInterface::class);
 
 		if ($expiration->isEnabled()) {
+			$logger->debug('Expiring file {filename} for user {uid}',
+						   ['filename' => $filename, 'uid' => $uid, 'app' => 'cron']);
 			// get available disk space for user
 			$user = \OC::$server->get(IUserManager::class)->get($uid);
 			if (is_null($user)) {
@@ -806,6 +808,8 @@ class Storage {
 			}
 			$versionsFileview = new View('/'.$uid.'/files_versions');
 
+			$logger->debug('Expiring file: start to compute quota',
+						   ['app' => 'cron']);
 			$softQuota = true;
 			$quota = $user->getQuota();
 			if ($quota === null || $quota === 'none') {
@@ -814,9 +818,13 @@ class Storage {
 			} else {
 				$quota = \OCP\Util::computerFileSize($quota);
 			}
+			$logger->debug('Expiring file: Computed quota ({quota} - {softQuota})',
+						   ['app' => 'cron', 'quota' => $quota, 'softQuota' => $softQuota]);
 
 			// make sure that we have the current size of the version history
 			$versionsSize = self::getVersionsSize($uid);
+			$logger->debug('Expiring file: Computed versions size: {size}',
+						   ['app' => 'cron', 'size' => $versionsSize]);
 
 			// calculate available space for version history
 			// subtract size of files and current versions size from quota
@@ -840,8 +848,12 @@ class Storage {
 			} else {
 				$availableSpace = PHP_INT_MAX;
 			}
+			$logger->debug('Expiring file: Computed available space: {availableSpace}',
+						   ['app' => 'cron', 'availableSpace' => $availableSpace]);
 
 			$allVersions = Storage::getVersions($uid, $filename);
+			$logger->debug('Expiring file: Found {number} versions',
+						   ['app' => 'cron', 'number' => count($allVersions)]);
 
 			$time = time();
 			[$toDelete, $sizeOfDeletedVersions] = self::getExpireList($time, $allVersions, $availableSpace <= 0);
@@ -851,6 +863,8 @@ class Storage {
 
 			// if still not enough free space we rearrange the versions from all files
 			if ($availableSpace <= 0) {
+				$logger->debug('still not enough free space, we rearrange the versions from all files',
+							['app' => 'cron']);
 				$result = self::getAllVersions($uid);
 				$allVersions = $result['all'];
 
@@ -863,6 +877,8 @@ class Storage {
 				$versionsSize = $versionsSize - $sizeOfDeletedVersions;
 			}
 
+			$logger->debug('Starting deletion of {count} versions',
+						['app' => 'cron', 'count' => count($toDelete)]);
 			foreach ($toDelete as $key => $path) {
 				\OC_Hook::emit('\OCP\Versions', 'preDelete', ['path' => $path, 'trigger' => self::DELETE_TRIGGER_QUOTA_EXCEEDED]);
 				self::deleteVersion($versionsFileview, $path);
@@ -871,6 +887,8 @@ class Storage {
 				$logger->info('Expire: ' . $path, ['app' => 'files_versions']);
 			}
 
+			$logger->debug('Finished deletion, available space now {availableSpace}',
+						['app' => 'cron', 'availableSpace' => $availableSpace]);
 			// Check if enough space is available after versions are rearranged.
 			// If not we delete the oldest versions until we meet the size limit for versions,
 			// but always keep the two latest versions
@@ -890,6 +908,8 @@ class Storage {
 				next($allVersions);
 				$i++;
 			}
+			$logger->debug('Finished expiring versions, available space now {availableSpace}',
+						['app' => 'cron', 'availableSpace' => $availableSpace]);
 
 			return $versionsSize; // finally return the new size of the version history
 		}
