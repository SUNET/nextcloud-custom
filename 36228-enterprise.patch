diff --color -ur nextcloud/apps/admin_audit/lib/Actions/Sharing.php nextcloud-patched/apps/admin_audit/lib/Actions/Sharing.php
--- nextcloud/apps/admin_audit/lib/Actions/Sharing.php	2023-01-17 10:05:41.000000000 +0100
+++ nextcloud-patched/apps/admin_audit/lib/Actions/Sharing.php	2023-02-03 10:44:21.344129221 +0100
@@ -160,6 +160,19 @@
 					'id',
 				]
 			);
+		} elseif ($params['shareType'] === IShare::TYPE_SCIENCEMESH) {
+			$this->log(
+				'The %s "%s" with ID "%s" has been shared to the sciencemesh user "%s" with permissions "%s" (Share ID: %s)',
+				$params,
+				[
+					'itemType',
+					'path',
+					'itemSource',
+					'shareWith',
+					'permissions',
+					'id',
+				]
+			);
 		}
 	}
 
@@ -270,6 +283,18 @@
 				$params,
 				[
 					'itemType',
+					'fileTarget',
+					'itemSource',
+					'shareWith',
+					'id',
+				]
+			);
+		} elseif ($params['shareType'] === IShare::TYPE_SCIENCEMESH) {
+			$this->log(
+				'The %s "%s" with ID "%s" has been unshared from the sciencemesh user "%s" (Share ID: %s)',
+				$params,
+				[
+					'itemType',
 					'fileTarget',
 					'itemSource',
 					'shareWith',
diff --color -ur nextcloud/apps/dav/lib/Connector/Sabre/SharesPlugin.php nextcloud-patched/apps/dav/lib/Connector/Sabre/SharesPlugin.php
--- nextcloud/apps/dav/lib/Connector/Sabre/SharesPlugin.php	2023-01-17 10:05:41.000000000 +0100
+++ nextcloud-patched/apps/dav/lib/Connector/Sabre/SharesPlugin.php	2023-02-03 10:44:21.344129221 +0100
@@ -110,6 +110,7 @@
 			IShare::TYPE_ROOM,
 			IShare::TYPE_CIRCLE,
 			IShare::TYPE_DECK,
+			IShare::TYPE_SCIENCEMESH,
 		];
 		foreach ($requestedShareTypes as $requestedShareType) {
 			$shares = $this->shareManager->getSharesBy(
diff --color -ur nextcloud/apps/files/lib/Controller/ApiController.php nextcloud-patched/apps/files/lib/Controller/ApiController.php
--- nextcloud/apps/files/lib/Controller/ApiController.php	2023-01-17 10:05:41.000000000 +0100
+++ nextcloud-patched/apps/files/lib/Controller/ApiController.php	2023-02-03 10:44:31.732325641 +0100
@@ -211,6 +211,7 @@
 			IShare::TYPE_EMAIL,
 			IShare::TYPE_ROOM,
 			IShare::TYPE_DECK,
+			IShare::TYPE_SCIENCEMESH,
 		];
 		$shareTypes = [];
 
diff --color -ur nextcloud/apps/files/lib/Service/OwnershipTransferService.php nextcloud-patched/apps/files/lib/Service/OwnershipTransferService.php
--- nextcloud/apps/files/lib/Service/OwnershipTransferService.php	2023-01-17 10:05:41.000000000 +0100
+++ nextcloud-patched/apps/files/lib/Service/OwnershipTransferService.php	2023-02-03 10:44:31.732325641 +0100
@@ -286,7 +286,7 @@
 		$shares = [];
 		$progress = new ProgressBar($output);
 
-		foreach ([IShare::TYPE_GROUP, IShare::TYPE_USER, IShare::TYPE_LINK, IShare::TYPE_REMOTE, IShare::TYPE_ROOM, IShare::TYPE_EMAIL, IShare::TYPE_CIRCLE, IShare::TYPE_DECK] as $shareType) {
+		foreach ([IShare::TYPE_GROUP, IShare::TYPE_USER, IShare::TYPE_LINK, IShare::TYPE_REMOTE, IShare::TYPE_ROOM, IShare::TYPE_EMAIL, IShare::TYPE_CIRCLE, IShare::TYPE_DECK, IShare::TYPE_SCIENCEMESH] as $shareType) {
 			$offset = 0;
 			while (true) {
 				$sharePage = $this->shareManager->getSharesBy($sourceUid, $shareType, null, true, 50, $offset);
diff --color -ur nextcloud/apps/files_sharing/lib/Controller/DeletedShareAPIController.php nextcloud-patched/apps/files_sharing/lib/Controller/DeletedShareAPIController.php
--- nextcloud/apps/files_sharing/lib/Controller/DeletedShareAPIController.php	2023-01-17 10:05:41.000000000 +0100
+++ nextcloud-patched/apps/files_sharing/lib/Controller/DeletedShareAPIController.php	2023-02-03 10:44:31.732325641 +0100
@@ -159,6 +159,14 @@
 				$result = array_merge($result, $this->getDeckShareHelper()->formatShare($share));
 			} catch (QueryException $e) {
 			}
+		} elseif ($share->getShareType() === IShare::TYPE_SCIENCEMESH) {
+			$result['share_with'] = $share->getSharedWith();
+			$result['share_with_displayname'] = '';
+
+			try {
+				$result = array_merge($result, $this->getSciencemeshShareHelper()->formatShare($share));
+			} catch (QueryException $e) {
+			}
 		}
 
 		return $result;
@@ -171,8 +179,9 @@
 		$groupShares = $this->shareManager->getDeletedSharedWith($this->userId, IShare::TYPE_GROUP, null, -1, 0);
 		$roomShares = $this->shareManager->getDeletedSharedWith($this->userId, IShare::TYPE_ROOM, null, -1, 0);
 		$deckShares = $this->shareManager->getDeletedSharedWith($this->userId, IShare::TYPE_DECK, null, -1, 0);
+		$sciencemeshShares = $this->shareManager->getDeletedSharedWith($this->userId, IShare::TYPE_SCIENCEMESH, null, -1, 0);
 
-		$shares = array_merge($groupShares, $roomShares, $deckShares);
+		$shares = array_merge($groupShares, $roomShares, $deckShares, $sciencemeshShares);
 
 		$shares = array_map(function (IShare $share) {
 			return $this->formatShare($share);
@@ -224,7 +233,7 @@
 	}
 
 	/**
-	 * Returns the helper of ShareAPIHelper for deck shares.
+	 * Returns the helper of DeletedShareAPIHelper for deck shares.
 	 *
 	 * If the Deck application is not enabled or the helper is not available
 	 * a QueryException is thrown instead.
@@ -239,4 +248,21 @@
 
 		return $this->serverContainer->get('\OCA\Deck\Sharing\ShareAPIHelper');
 	}
+
+	/**
+	 * Returns the helper of DeletedShareAPIHelper for sciencemesh shares.
+	 *
+	 * If the sciencemesh application is not enabled or the helper is not available
+	 * a QueryException is thrown instead.
+	 *
+	 * @return \OCA\Deck\Sharing\ShareAPIHelper
+	 * @throws QueryException
+	 */
+	private function getSciencemeshShareHelper() {
+		if (!$this->appManager->isEnabledForUser('sciencemesh')) {
+			throw new QueryException();
+		}
+
+		return $this->serverContainer->get('\OCA\ScienceMesh\Sharing\ShareAPIHelper');
+	}
 }
diff --color -ur nextcloud/apps/files_sharing/lib/Controller/ShareAPIController.php nextcloud-patched/apps/files_sharing/lib/Controller/ShareAPIController.php
--- nextcloud/apps/files_sharing/lib/Controller/ShareAPIController.php	2023-01-17 10:05:41.000000000 +0100
+++ nextcloud-patched/apps/files_sharing/lib/Controller/ShareAPIController.php	2023-02-03 10:44:31.732325641 +0100
@@ -320,6 +320,14 @@
 				$result = array_merge($result, $this->getDeckShareHelper()->formatShare($share));
 			} catch (QueryException $e) {
 			}
+		} elseif ($share->getShareType() === IShare::TYPE_SCIENCEMESH) {
+			$result['share_with'] = $share->getSharedWith();
+			$result['share_with_displayname'] = '';
+
+			try {
+				$result = array_merge($result, $this->getSciencemeshShareHelper()->formatShare($share));
+			} catch (QueryException $e) {
+			}
 		}
 
 
@@ -687,6 +695,12 @@
 			} catch (QueryException $e) {
 				throw new OCSForbiddenException($this->l->t('Sharing %s failed because the back end does not support room shares', [$node->getPath()]));
 			}
+		} elseif ($shareType === IShare::TYPE_SCIENCEMESH) {
+			try {
+				$this->getSciencemeshShareHelper()->createShare($share, $shareWith, $permissions, $expireDate);
+			} catch (QueryException $e) {
+				throw new OCSForbiddenException($this->l->t('Sharing %s failed because the back end does not support sciencemesh shares', [$node->getPath()]));
+			}
 		} else {
 			throw new OCSBadRequestException($this->l->t('Unknown share type'));
 		}
@@ -725,8 +739,9 @@
 		$circleShares = $this->shareManager->getSharedWith($this->currentUser, IShare::TYPE_CIRCLE, $node, -1, 0);
 		$roomShares = $this->shareManager->getSharedWith($this->currentUser, IShare::TYPE_ROOM, $node, -1, 0);
 		$deckShares = $this->shareManager->getSharedWith($this->currentUser, IShare::TYPE_DECK, $node, -1, 0);
+		$sciencemeshShares = $this->shareManager->getSharedWith($this->currentUser, IShare::TYPE_SCIENCEMESH, $node, -1, 0);
 
-		$shares = array_merge($userShares, $groupShares, $circleShares, $roomShares, $deckShares);
+		$shares = array_merge($userShares, $groupShares, $circleShares, $roomShares, $deckShares, $sciencemeshShares);
 
 		$filteredShares = array_filter($shares, function (IShare $share) {
 			return $share->getShareOwner() !== $this->currentUser;
@@ -1409,6 +1424,14 @@
 			}
 		}
 
+		if ($share->getShareType() === IShare::TYPE_SCIENCEMESH) {
+			try {
+				return $this->getSciencemeshShareHelper()->canAccessShare($share, $this->currentUser);
+			} catch (QueryException $e) {
+				return false;
+			}
+		}
+
 		return false;
 	}
 
@@ -1485,7 +1508,8 @@
 	protected function canDeleteShareFromSelf(\OCP\Share\IShare $share): bool {
 		if ($share->getShareType() !== IShare::TYPE_GROUP &&
 			$share->getShareType() !== IShare::TYPE_ROOM &&
-			$share->getShareType() !== IShare::TYPE_DECK
+			$share->getShareType() !== IShare::TYPE_DECK &&
+			$share->getShareType() !== IShare::TYPE_SCIENCEMESH
 		) {
 			return false;
 		}
@@ -1522,6 +1546,14 @@
 			}
 		}
 
+		if ($share->getShareType() === IShare::TYPE_SCIENCEMESH) {
+			try {
+				return $this->getSciencemeshShareHelper()->canAccessShare($share, $this->currentUser);
+			} catch (QueryException $e) {
+				return false;
+			}
+		}
+
 		return false;
 	}
 
@@ -1601,6 +1633,15 @@
 			// Do nothing, just try the other share type
 		}
 
+		try {
+			if ($this->shareManager->shareProviderExists(IShare::TYPE_SCIENCEMESH)) {
+				$share = $this->shareManager->getShareById('sciencemesh:' . $id, $this->currentUser);
+				return $share;
+			}
+		} catch (ShareNotFound $e) {
+			// Do nothing, just try the other share type
+		}
+
 		if (!$this->shareManager->outgoingServer2ServerSharesAllowed()) {
 			throw new ShareNotFound();
 		}
@@ -1665,6 +1706,23 @@
 	}
 
 	/**
+	 * Returns the helper of ShareAPIHelper for sciencemesh shares.
+	 *
+	 * If the sciencemesh application is not enabled or the helper is not available
+	 * a QueryException is thrown instead.
+	 *
+	 * @return \OCA\Deck\Sharing\ShareAPIHelper
+	 * @throws QueryException
+	 */
+	private function getSciencemeshShareHelper() {
+		if (!$this->appManager->isEnabledForUser('sciencemesh')) {
+			throw new QueryException();
+		}
+
+		return $this->serverContainer->get('\OCA\ScienceMesh\Sharing\ShareAPIHelper');
+	}
+
+	/**
 	 * @param string $viewer
 	 * @param Node $node
 	 * @param bool $reShares
@@ -1679,7 +1737,8 @@
 			IShare::TYPE_EMAIL,
 			IShare::TYPE_CIRCLE,
 			IShare::TYPE_ROOM,
-			IShare::TYPE_DECK
+			IShare::TYPE_DECK,
+			IShare::TYPE_SCIENCEMESH
 		];
 
 		// Should we assume that the (currentUser) viewer is the owner of the node !?
@@ -1832,8 +1891,12 @@
 		// TALK SHARES
 		$roomShares = $this->shareManager->getSharesBy($this->currentUser, IShare::TYPE_ROOM, $path, $reshares, -1, 0);
 
+		// DECK SHARES
 		$deckShares = $this->shareManager->getSharesBy($this->currentUser, IShare::TYPE_DECK, $path, $reshares, -1, 0);
 
+		// SCIENCEMESH SHARES
+		$sciencemeshShares = $this->shareManager->getSharesBy($this->currentUser, IShare::TYPE_SCIENCEMESH, $path, $reshares, -1, 0);
+
 		// FEDERATION
 		if ($this->shareManager->outgoingServer2ServerSharesAllowed()) {
 			$federatedShares = $this->shareManager->getSharesBy($this->currentUser, IShare::TYPE_REMOTE, $path, $reshares, -1, 0);
@@ -1846,7 +1909,7 @@
 			$federatedGroupShares = [];
 		}
 
-		return array_merge($userShares, $groupShares, $linkShares, $mailShares, $circleShares, $roomShares, $deckShares, $federatedShares, $federatedGroupShares);
+		return array_merge($userShares, $groupShares, $linkShares, $mailShares, $circleShares, $roomShares, $deckShares, $sciencemeshShares, $federatedShares, $federatedGroupShares);
 	}
 
 
diff --color -ur nextcloud/apps/files_sharing/lib/Controller/ShareesAPIController.php nextcloud-patched/apps/files_sharing/lib/Controller/ShareesAPIController.php
--- nextcloud/apps/files_sharing/lib/Controller/ShareesAPIController.php	2023-01-17 10:05:41.000000000 +0100
+++ nextcloud-patched/apps/files_sharing/lib/Controller/ShareesAPIController.php	2023-02-03 10:44:31.732325641 +0100
@@ -191,6 +191,10 @@
 			if ($this->shareManager->shareProviderExists(IShare::TYPE_DECK)) {
 				$shareTypes[] = IShare::TYPE_DECK;
 			}
+
+			if ($this->shareManager->shareProviderExists(IShare::TYPE_SCIENCEMESH)) {
+				$shareTypes[] = IShare::TYPE_SCIENCEMESH;
+			}
 		} else {
 			if ($this->shareManager->allowGroupSharing()) {
 				$shareTypes[] = IShare::TYPE_GROUP;
@@ -206,6 +210,9 @@
 		if ($this->shareManager->shareProviderExists(IShare::TYPE_DECK)) {
 			$shareTypes[] = IShare::TYPE_DECK;
 		}
+		if ($this->shareManager->shareProviderExists(IShare::TYPE_SCIENCEMESH)) {
+			$shareTypes[] = IShare::TYPE_SCIENCEMESH;
+		}
 
 		if ($shareType !== null && is_array($shareType)) {
 			$shareTypes = array_intersect($shareTypes, $shareType);
diff --color -ur nextcloud/apps/files_sharing/lib/MountProvider.php nextcloud-patched/apps/files_sharing/lib/MountProvider.php
--- nextcloud/apps/files_sharing/lib/MountProvider.php	2023-01-17 10:05:41.000000000 +0100
+++ nextcloud-patched/apps/files_sharing/lib/MountProvider.php	2023-02-03 10:44:31.732325641 +0100
@@ -97,6 +97,7 @@
 		$shares = array_merge($shares, $this->shareManager->getSharedWith($user->getUID(), IShare::TYPE_CIRCLE, null, -1));
 		$shares = array_merge($shares, $this->shareManager->getSharedWith($user->getUID(), IShare::TYPE_ROOM, null, -1));
 		$shares = array_merge($shares, $this->shareManager->getSharedWith($user->getUID(), IShare::TYPE_DECK, null, -1));
+		$shares = array_merge($shares, $this->shareManager->getSharedWith($user->getUID(), IShare::TYPE_SCIENCEMESH, null, -1));
 
 
 		// filter out excluded shares and group shares that includes self
diff --color -ur nextcloud/lib/private/Share/Constants.php nextcloud-patched/lib/private/Share/Constants.php
--- nextcloud/lib/private/Share/Constants.php	2023-01-17 10:05:41.000000000 +0100
+++ nextcloud-patched/lib/private/Share/Constants.php	2023-02-03 10:47:21.543180470 +0100
@@ -75,6 +75,11 @@
 	public const SHARE_TYPE_DECK = 12;
 	// const SHARE_TYPE_DECK_USER = 13; // Internal type used by DeckShareProvider
 
+	/**
+	 * @deprecated 21.0.0 - use IShare::TYPE_SCIENCEMESH instead
+	 */
+	public const SHARE_TYPE_SCIENCEMESH = 15;
+
 	public const FORMAT_NONE = -1;
 	public const FORMAT_STATUSES = -2;
 	public const FORMAT_SOURCES = -3;  // ToDo Check if it is still in use otherwise remove it
diff --color -ur nextcloud/lib/private/Share20/Manager.php nextcloud-patched/lib/private/Share20/Manager.php
--- nextcloud/lib/private/Share20/Manager.php	2023-01-17 10:05:41.000000000 +0100
+++ nextcloud-patched/lib/private/Share20/Manager.php	2023-02-03 10:47:21.543180470 +0100
@@ -245,6 +245,7 @@
 			}
 		} elseif ($share->getShareType() === IShare::TYPE_ROOM) {
 		} elseif ($share->getShareType() === IShare::TYPE_DECK) {
+		} elseif ($share->getShareType() === IShare::TYPE_SCIENCEMESH) {
 		} else {
 			// We cannot handle other types yet
 			throw new \InvalidArgumentException('unknown share type');
diff --color -ur nextcloud/lib/private/Share20/ProviderFactory.php nextcloud-patched/lib/private/Share20/ProviderFactory.php
--- nextcloud/lib/private/Share20/ProviderFactory.php	2023-01-17 10:05:41.000000000 +0100
+++ nextcloud-patched/lib/private/Share20/ProviderFactory.php	2023-02-03 10:47:21.543180470 +0100
@@ -341,6 +341,8 @@
 			$provider = $this->getRoomShareProvider();
 		} elseif ($shareType === IShare::TYPE_DECK) {
 			$provider = $this->getProvider('deck');
+		} elseif ($shareType === IShare::TYPE_SCIENCEMESH) {
+			$provider = $this->getProvider('sciencemesh');
 		}
 
 
diff --color -ur nextcloud/lib/public/Share/IShare.php nextcloud-patched/lib/public/Share/IShare.php
--- nextcloud/lib/public/Share/IShare.php	2023-01-17 10:05:41.000000000 +0100
+++ nextcloud-patched/lib/public/Share/IShare.php	2023-02-03 10:47:21.543180470 +0100
@@ -119,6 +119,11 @@
 	public const TYPE_DECK_USER = 13;
 
 	/**
+	 * @since 26.0.0
+	 */
+	public const TYPE_SCIENCEMESH = 15;
+
+	/**
 	 * @since 18.0.0
 	 */
 	public const STATUS_PENDING = 0;
